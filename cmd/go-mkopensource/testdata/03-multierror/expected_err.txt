1 intended-usage errors:
 1. Dependency 'example.com/cc-sa@(modified)' uses license 'Creative Commons Attribution Share Alike 4.0 International' which is not allowed on applications that run on customer machines.
    To solve this error, replace the dependency with another that uses
    an acceptable license.
2 license-approval errors:
 1. Package "example.com/apache-patent/a": the Apache license contains a patent-grant, but there's a separate PATENTS file; something hokey is going on
 2. Package "example.com/apache-patent/b": the Apache license contains a patent-grant, but there's a separate PATENTS file; something hokey is going on
    This probably means that you added or upgraded a dependency, and the
    automated opensource-license-checker objects to what it sees.  This
    may because of a bug in the checker
    (github.com/telepresenceio/go-mkopensource) that you need to go fix,
    or it may be because of an actual license issue that prevents you
    from being allowed to use a package, and you need to find an
    alternative.
2 license-detection errors:
 1. Package "example.com/gpl": unknown SPDX identifier "GPL-3.0-or-later-with-some-non-standard-exception"
 2. Package "github.com/josharian/intern": could not identify a license for all sources (had no global LICENSE file)
    This probably means that you added or upgraded a dependency, and the
    automated opensource-license-checker can't confidently detect what
    the license is.  (This is a good thing, because it is reminding you
    to check the license of libraries before using them.)

    Some possible causes for this issue are:

    - Dependency is proprietary Ambassador Labs software: Create a yaml
    file with the proprietary dependencies and pass it to the
    generate.sh script using the --proprietary-packages command line
    option.  See the README.md file for more information.

    - License information can't be identified: Add an entry to
    hardcodedGoDependencies, hardcodedPythonDependencies or
    hardcodedJsDependencies depending on the dependency that was not
    identified.

    For github.com/josharian/intern in particular, this probably means
    that you are depending on an old version; upgrading to intern
    v1.0.1-0.20211109044230-42b52b674af5 or later should resolve this.